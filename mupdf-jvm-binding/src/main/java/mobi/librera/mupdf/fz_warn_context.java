/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mobi.librera.mupdf;


public class fz_warn_context {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected fz_warn_context(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(fz_warn_context obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(fz_warn_context obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mupdfJNI.delete_fz_warn_context(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPrint_user(SWIGTYPE_p_void value) {
    mupdfJNI.fz_warn_context_print_user_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getPrint_user() {
    long cPtr = mupdfJNI.fz_warn_context_print_user_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setPrint(SWIGTYPE_p_f_p_void_p_q_const__char__void value) {
    mupdfJNI.fz_warn_context_print_set(swigCPtr, this, SWIGTYPE_p_f_p_void_p_q_const__char__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_p_q_const__char__void getPrint() {
    long cPtr = mupdfJNI.fz_warn_context_print_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_p_q_const__char__void(cPtr, false);
  }

  public void setCount(int value) {
    mupdfJNI.fz_warn_context_count_set(swigCPtr, this, value);
  }

  public int getCount() {
    return mupdfJNI.fz_warn_context_count_get(swigCPtr, this);
  }

  public void setMessage(byte[] value) {
    mupdfJNI.fz_warn_context_message_set(swigCPtr, this, value);
  }

  public byte[] getMessage() {
    return mupdfJNI.fz_warn_context_message_get(swigCPtr, this);
  }

  public fz_warn_context() {
    this(mupdfJNI.new_fz_warn_context(), true);
  }

}
