/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mobi.librera.mupdf;


public final class fz_error_type {
  public final static fz_error_type FZ_ERROR_NONE = new fz_error_type("FZ_ERROR_NONE");
  public final static fz_error_type FZ_ERROR_GENERIC = new fz_error_type("FZ_ERROR_GENERIC");
  public final static fz_error_type FZ_ERROR_SYSTEM = new fz_error_type("FZ_ERROR_SYSTEM");
  public final static fz_error_type FZ_ERROR_LIBRARY = new fz_error_type("FZ_ERROR_LIBRARY");
  public final static fz_error_type FZ_ERROR_ARGUMENT = new fz_error_type("FZ_ERROR_ARGUMENT");
  public final static fz_error_type FZ_ERROR_LIMIT = new fz_error_type("FZ_ERROR_LIMIT");
  public final static fz_error_type FZ_ERROR_UNSUPPORTED = new fz_error_type("FZ_ERROR_UNSUPPORTED");
  public final static fz_error_type FZ_ERROR_FORMAT = new fz_error_type("FZ_ERROR_FORMAT");
  public final static fz_error_type FZ_ERROR_SYNTAX = new fz_error_type("FZ_ERROR_SYNTAX");
  public final static fz_error_type FZ_ERROR_TRYLATER = new fz_error_type("FZ_ERROR_TRYLATER");
  public final static fz_error_type FZ_ERROR_ABORT = new fz_error_type("FZ_ERROR_ABORT");
  public final static fz_error_type FZ_ERROR_REPAIRED = new fz_error_type("FZ_ERROR_REPAIRED");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static fz_error_type swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + fz_error_type.class + " with value " + swigValue);
  }

  private fz_error_type(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private fz_error_type(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private fz_error_type(String swigName, fz_error_type swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static fz_error_type[] swigValues = { FZ_ERROR_NONE, FZ_ERROR_GENERIC, FZ_ERROR_SYSTEM, FZ_ERROR_LIBRARY, FZ_ERROR_ARGUMENT, FZ_ERROR_LIMIT, FZ_ERROR_UNSUPPORTED, FZ_ERROR_FORMAT, FZ_ERROR_SYNTAX, FZ_ERROR_TRYLATER, FZ_ERROR_ABORT, FZ_ERROR_REPAIRED };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

