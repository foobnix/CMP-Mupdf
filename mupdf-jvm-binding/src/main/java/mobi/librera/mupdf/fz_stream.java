/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package mobi.librera.mupdf;


public class fz_stream {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected fz_stream(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(fz_stream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(fz_stream obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mupdfJNI.delete_fz_stream(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setRefs(int value) {
    mupdfJNI.fz_stream_refs_set(swigCPtr, this, value);
  }

  public int getRefs() {
    return mupdfJNI.fz_stream_refs_get(swigCPtr, this);
  }

  public void setError(int value) {
    mupdfJNI.fz_stream_error_set(swigCPtr, this, value);
  }

  public int getError() {
    return mupdfJNI.fz_stream_error_get(swigCPtr, this);
  }

  public void setEof(int value) {
    mupdfJNI.fz_stream_eof_set(swigCPtr, this, value);
  }

  public int getEof() {
    return mupdfJNI.fz_stream_eof_get(swigCPtr, this);
  }

  public void setProgressive(int value) {
    mupdfJNI.fz_stream_progressive_set(swigCPtr, this, value);
  }

  public int getProgressive() {
    return mupdfJNI.fz_stream_progressive_get(swigCPtr, this);
  }

  public void setPos(long value) {
    mupdfJNI.fz_stream_pos_set(swigCPtr, this, value);
  }

  public long getPos() {
    return mupdfJNI.fz_stream_pos_get(swigCPtr, this);
  }

  public void setAvail(int value) {
    mupdfJNI.fz_stream_avail_set(swigCPtr, this, value);
  }

  public int getAvail() {
    return mupdfJNI.fz_stream_avail_get(swigCPtr, this);
  }

  public void setBits(int value) {
    mupdfJNI.fz_stream_bits_set(swigCPtr, this, value);
  }

  public int getBits() {
    return mupdfJNI.fz_stream_bits_get(swigCPtr, this);
  }

  public void setRp(byte[] value) {
    mupdfJNI.fz_stream_rp_set(swigCPtr, this, value);
  }



  public void setWp(byte[] value) {
    mupdfJNI.fz_stream_wp_set(swigCPtr, this, value);
  }


  public void setState(SWIGTYPE_p_void value) {
    mupdfJNI.fz_stream_state_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getState() {
    long cPtr = mupdfJNI.fz_stream_state_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setNext(SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_size_t__int value) {
    mupdfJNI.fz_stream_next_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_size_t__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_size_t__int getNext() {
    long cPtr = mupdfJNI.fz_stream_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_size_t__int(cPtr, false);
  }

  public void setDrop(SWIGTYPE_p_f_p_struct_fz_context_p_void__void value) {
    mupdfJNI.fz_stream_drop_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_fz_context_p_void__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_fz_context_p_void__void getDrop() {
    long cPtr = mupdfJNI.fz_stream_drop_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_fz_context_p_void__void(cPtr, false);
  }

  public void setSeek(SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_long_long_int__void value) {
    mupdfJNI.fz_stream_seek_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_long_long_int__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_long_long_int__void getSeek() {
    long cPtr = mupdfJNI.fz_stream_seek_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_fz_context_p_struct_fz_stream_long_long_int__void(cPtr, false);
  }

  public fz_stream() {
    this(mupdfJNI.new_fz_stream(), true);
  }

}
